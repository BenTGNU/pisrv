server.modules = (
"mod_rewrite",
"mod_redirect",
"mod_alias",
"mod_access",
"mod_auth",
"mod_status",
"mod_simple_vhost",
#"mod_evhost",
#"mod_userdir",
#"mod_secdownload",
#"mod_fastcgi",
"mod_proxy",
"mod_cgi",
#"mod_ssi",
"mod_compress",
#"mod_usertrack",
"mod_expire",
#"mod_rrdtool",
"mod_accesslog", 
)

server.document-root        = "/var/www"
server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
server.port                 = 80
dir-listing.activate    = "enable"
dir-listing.encoding     = "utf-8"
index-file.names            = ( "index.php", "index.html", "index.lighttpd.html" )
url.access-deny             = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )
mimetype.assign = ( ".html" => "text/html",
".txt" => "text/plain",
".jpg" => "image/jpeg", 
".png" => "image/png",
".css" => "text/css", 
".dat" => "application/x-ns-proxy-autoconfig",
"" => "application/octet-stream" )  

# SSL for HTTPS
#ssl.engine = "enable"
#ssl.pemfile = "/etc/ssl/owncloud/server.pem"

$HTTP["url"] =~ "\.(jpg|gif|png|css|js|svg)$" {
    expire.url = ( "" => "access 7 days" )
}
etag.use-inode = "enable"
etag.use-mtime = "enable"
etag.use-size = "enable"
static-file.etags = "enable"

# compression settings for gzip
compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ("text/xml","application/x-javascript", , "application/javascript", "text/javascript", "text/x-js", "text/css", "text/html", "text/plain", "image/png", "image/gif", "image/jpg", "image/svg+xml", "application/xml")

# default listening port for IPv6 falls back to the IPv4 port
include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
#include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

#$HTTP["url"] =~ "^/owncloud/data/" {
#url.access-deny = ("")  
#}
#$HTTP["url"] =~ "^/owncloud($|/)" {
#dir-listing.activate = "disable"  
#}

# Virtual Hosts
$HTTP["host"] == "pisrv.lan" {
server.document-root = "/var/www/intranet"
}

$HTTP["host"] == "mon.pisrv.lan" {
proxy.server = ( "" => (("host" => "192.168.1.10", "port" => 8888 )))
}

$HTTP["host"] == "ctrl.pisrv.lan" {
server.document-root = "/var/www/raspcontrol"
}

#$HTTP["host"] == "sync.pisrv.lan" {
#server.document-root = "/var/www/weave"
#}

#$HTTP["host"] == "seed.pisrv.lan" {
#proxy.server = ( "" => (("host" => "192.168.1.10", "port" => 8112 )))
#}

#$HTTP["host"] == "nzb.pisrv.lan" {
#proxy.server = ( "" => (("host" => "192.168.1.10", "port" => 9095 )))
#}

$HTTP["host"] == "cctv.pisrv.lan" {
proxy.server = ( "" => (("host" => "127.0.0.1", "port" => 7080 )))
}

$HTTP["host"] == "apt.pisrv.lan" {
proxy.server = ( "" => (("host" => "192.168.1.10", "port" => 3142 )))
}

$HTTP["host"] == "dlna.pisrv.lan" {
proxy.server = ( "" => (("host" => "192.168.1.10", "port" => 8200 )))
}

# Munin Configuration
#alias.url += ( "/munin-static" => "/etc/munin/static" )
#alias.url += ( "/munin"        => "/var/cache/munin/www/" )

#fastcgi.server += ("/munin-cgi/munin-cgi-graph" =>
#                   (( "socket"      => "/var/run/lighttpd/munin-cgi-graph.sock",
#                      "bin-path"    => "/usr/lib/munin/cgi/munin-cgi-graph",
#                      "check-local" => "disable",
#                   )),
#                  "/munin-cgi/munin-cgi-html" =>
#                   (( "socket"      => "/var/run/lighttpd/munin-cgi-html.sock",
#                      "bin-path"    => "/usr/lib/munin/cgi/munin-cgi-html",
#                      "check-local" => "disable",
#                   ))
#                 )
#
#url.rewrite-repeat += (
#                   "/munin/(.*)" => "/munin-cgi/munin-cgi-html/$1",
#                   "/munin-cgi/munin-cgi-html$" => "/munin-cgi/munin-cgi-html/",
#                   "/munin-cgi/munin-cgi-html/static/(.*)" => "/munin-static/$1"
#                   )
